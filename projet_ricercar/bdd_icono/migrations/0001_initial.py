# Generated by Django 5.0.5 on 2024-05-07 12:32

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Auteur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auteur_nom', models.CharField(blank=True, max_length=40, null=True, verbose_name='Nom')),
                ('auteur_prenom', models.CharField(blank=True, max_length=40, null=True, verbose_name='Prénom')),
                ('pseudonyme', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Auteur.e',
                'verbose_name_plural': 'Auteur.e.s',
                'ordering': ['auteur_nom', 'auteur_prenom'],
            },
        ),
        migrations.CreateModel(
            name='DepartementCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('departement_nom', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'verbose_name': 'Département de collection',
                'verbose_name_plural': 'Départements de collection',
            },
        ),
        migrations.CreateModel(
            name='DonneesBiblio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ref_biblio', models.TextField(blank=True, null=True, verbose_name='Référence bibliographique')),
                ('edition', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Données bibliographique',
                'verbose_name_plural': 'Données bibliographiques',
            },
        ),
        migrations.CreateModel(
            name='Ecole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ecole', models.CharField(max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legende', models.TextField(blank=True, null=True, verbose_name='Légende')),
                ('description', models.TextField(blank=True, null=True)),
                ('commentaire', models.TextField(blank=True, null=True)),
                ('existe_en_physique', models.BooleanField(default=True)),
                ('n_inventaire', models.CharField(blank=True, max_length=150, null=True, verbose_name="Numéro d'inventaire dans l'institution")),
                ('n_cesr', models.CharField(blank=True, max_length=150, null=True, verbose_name='numéro de document CESR')),
                ('image_format', models.CharField(choices=[('jpeg', 'JPEG'), ('tiff', 'TIFF'), ('NR', 'Non-renseigné')], default='non-renseigné', verbose_name="Format de l'image")),
                ('couleur', models.CharField(choices=[('Couleur', 'Couleur'), ('N & B', 'Noir et blanc'), ('NR', 'Non-renseigné')], default='non-renseigné', verbose_name='Couleur')),
                ('resolution', models.CharField(default='non-renseigné', max_length=50, verbose_name='Résolution')),
                ('photographie_type', models.CharField(choices=[('numerique', 'Numérique'), ('photo', 'Photo'), ('NR', 'Non-renseigné')], default='non-renseigné', verbose_name='Type de photographie')),
                ('credit', models.CharField(blank=True, max_length=250, null=True)),
                ('lien_telechargement', models.ImageField(null=True, upload_to='images/', verbose_name='Dépôt du fichier image')),
                ('n_cliche_numerique', models.CharField(blank=True, max_length=250, null=True)),
                ('n_cliche_photo', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution_nom', models.CharField(blank=True, max_length=50, null=True, verbose_name="Nom de l'institution")),
                ('pays', models.CharField(blank=True, max_length=30, null=True)),
                ('ville', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'ordering': ['institution_nom'],
            },
        ),
        migrations.CreateModel(
            name='IntAuteurEcole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': "Ecole artistique de l'auteur",
                'verbose_name_plural': 'Ecoles artistiquess des auteurs',
            },
        ),
        migrations.CreateModel(
            name='IntAuteurLieuActivite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': "Lieu d'activité de l'auteur",
                'verbose_name_plural': "Lieux d'activité des auteurs",
            },
        ),
        migrations.CreateModel(
            name='IntImageDonneesBiblio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Donnée bibliographique',
                'verbose_name_plural': 'Données bibliographiques',
            },
        ),
        migrations.CreateModel(
            name='IntImageMotCle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Mot clé',
                'verbose_name_plural': 'Mots clés',
            },
        ),
        migrations.CreateModel(
            name='IntImageTheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Thème',
                'verbose_name_plural': 'Thèmes',
            },
        ),
        migrations.CreateModel(
            name='IntSupportAuteur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Auteur.e du support',
                'verbose_name_plural': 'Auteur.e.s du support',
            },
        ),
        migrations.CreateModel(
            name='IntSupportTechnique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Technique du support',
                'verbose_name_plural': 'Techniques du support',
            },
        ),
        migrations.CreateModel(
            name='LieuActivite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lieu_activite', models.CharField(max_length=40)),
            ],
            options={
                'verbose_name': "Lieu d'activité",
                'verbose_name_plural': "Lieux d'activité",
            },
        ),
        migrations.CreateModel(
            name='MotCle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mot_cle_libelle', models.CharField(blank=True, max_length=20, null=True, verbose_name='Libellé du mot clé')),
                ('mot_cle_type', models.CharField(blank=True, max_length=20, null=True, verbose_name='Type du mot clé')),
            ],
            options={
                'verbose_name': 'Mot clé',
                'verbose_name_plural': 'Mots clés',
            },
        ),
        migrations.CreateModel(
            name='Photographe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photographe_nom', models.CharField(blank=True, max_length=150, null=True)),
                ('photographe_prenom', models.CharField(blank=True, max_length=50, null=True)),
                ('agence', models.CharField(blank=True, choices=[('RNM', 'RNM'), ('BNF', 'BNF')], null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Support',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('support_nom', models.CharField(blank=True, max_length=150, null=True)),
                ('categorie', models.CharField(blank=True, max_length=40, null=True, verbose_name='Catégorie')),
                ('date_creation', models.CharField(blank=True, max_length=40, null=True, verbose_name='Date de création')),
                ('periode_creation', models.CharField(blank=True, max_length=40, null=True, verbose_name='Période de création')),
            ],
        ),
        migrations.CreateModel(
            name='Technique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('technique_libelle', models.CharField(blank=True, max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme_libelle', models.CharField(blank=True, max_length=150, null=True, verbose_name='Libellé du thème')),
            ],
            options={
                'verbose_name': 'Thème',
                'verbose_name_plural': 'Thèmes',
            },
        ),
        migrations.AddConstraint(
            model_name='donneesbiblio',
            constraint=models.UniqueConstraint(fields=('ref_biblio',), name='unique_ref_biblio'),
        ),
        migrations.AddField(
            model_name='image',
            name='fk_dpt',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bdd_icono.departementcollection', verbose_name='Département de collection'),
        ),
        migrations.AddField(
            model_name='departementcollection',
            name='fk_institution',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bdd_icono.institution', verbose_name='Institution'),
        ),
        migrations.AddField(
            model_name='intauteurecole',
            name='fk_auteur',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='bdd_icono.auteur'),
        ),
        migrations.AddField(
            model_name='intauteurecole',
            name='fk_ecole',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='auteurs', to='bdd_icono.ecole', verbose_name='Ecole'),
        ),
        migrations.AddField(
            model_name='auteur',
            name='ecole',
            field=models.ManyToManyField(through='bdd_icono.IntAuteurEcole', to='bdd_icono.ecole'),
        ),
        migrations.AddField(
            model_name='intauteurlieuactivite',
            name='fk_auteur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bdd_icono.auteur'),
        ),
        migrations.AddField(
            model_name='intimagedonneesbiblio',
            name='fk_donnees_biblio',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='bdd_icono.donneesbiblio', verbose_name="Donnée bibliographique correspondante à l'image"),
        ),
        migrations.AddField(
            model_name='intimagedonneesbiblio',
            name='fk_image',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='bdd_icono.image'),
        ),
        migrations.AddField(
            model_name='image',
            name='donneesBiblio',
            field=models.ManyToManyField(through='bdd_icono.IntImageDonneesBiblio', to='bdd_icono.donneesbiblio'),
        ),
        migrations.AddField(
            model_name='intimagemotcle',
            name='fk_image',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='bdd_icono.image'),
        ),
        migrations.AddField(
            model_name='intimagetheme',
            name='fk_image',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='bdd_icono.image'),
        ),
        migrations.AddField(
            model_name='intsupportauteur',
            name='fk_auteur',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='bdd_icono.auteur', verbose_name='Auteur.e'),
        ),
        migrations.AddField(
            model_name='intauteurlieuactivite',
            name='fk_lieu_activite',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bdd_icono.lieuactivite', verbose_name="Lieu d'activté"),
        ),
        migrations.AddField(
            model_name='auteur',
            name='lieu_activite',
            field=models.ManyToManyField(through='bdd_icono.IntAuteurLieuActivite', to='bdd_icono.lieuactivite'),
        ),
        migrations.AddConstraint(
            model_name='motcle',
            constraint=models.UniqueConstraint(fields=('mot_cle_libelle',), name='unique_mot_cle_libelle'),
        ),
        migrations.AddConstraint(
            model_name='motcle',
            constraint=models.UniqueConstraint(fields=('mot_cle_type',), name='unique_mot_cle_type'),
        ),
        migrations.AddField(
            model_name='intimagemotcle',
            name='fk_mot_cle',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='bdd_icono.motcle', verbose_name='Mot clé'),
        ),
        migrations.AddField(
            model_name='image',
            name='motCle',
            field=models.ManyToManyField(through='bdd_icono.IntImageMotCle', to='bdd_icono.motcle'),
        ),
        migrations.AddField(
            model_name='image',
            name='fk_photographe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bdd_icono.photographe', verbose_name='Photographe'),
        ),
        migrations.AddField(
            model_name='intsupporttechnique',
            name='fk_support',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='bdd_icono.support'),
        ),
        migrations.AddField(
            model_name='intsupportauteur',
            name='fk_support',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='bdd_icono.support'),
        ),
        migrations.AddField(
            model_name='image',
            name='fk_support',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bdd_icono.support', verbose_name='Support'),
        ),
        migrations.AddConstraint(
            model_name='technique',
            constraint=models.UniqueConstraint(fields=('technique_libelle',), name='unique_technique_libelle'),
        ),
        migrations.AddField(
            model_name='intsupporttechnique',
            name='fk_technique',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='bdd_icono.technique', verbose_name='Technique'),
        ),
        migrations.AddConstraint(
            model_name='theme',
            constraint=models.UniqueConstraint(fields=('theme_libelle',), name='unique_theme_libelle'),
        ),
        migrations.AddField(
            model_name='intimagetheme',
            name='fk_theme',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='bdd_icono.theme', verbose_name='Thème'),
        ),
        migrations.AddField(
            model_name='image',
            name='theme',
            field=models.ManyToManyField(through='bdd_icono.IntImageTheme', to='bdd_icono.theme'),
        ),
        migrations.AddConstraint(
            model_name='intimagedonneesbiblio',
            constraint=models.UniqueConstraint(fields=('fk_donnees_biblio', 'fk_image'), name='unique_image_donneesbiblio'),
        ),
        migrations.AddConstraint(
            model_name='auteur',
            constraint=models.UniqueConstraint(fields=('auteur_nom', 'auteur_prenom', 'pseudonyme'), name='unique_auteur'),
        ),
        migrations.AddConstraint(
            model_name='intsupportauteur',
            constraint=models.UniqueConstraint(fields=('fk_auteur', 'fk_support'), name='unique_support_auteur'),
        ),
        migrations.AddConstraint(
            model_name='intsupporttechnique',
            constraint=models.UniqueConstraint(fields=('fk_technique', 'fk_support'), name='unique_support_technique'),
        ),
        migrations.AddConstraint(
            model_name='image',
            constraint=models.UniqueConstraint(fields=('n_cesr',), name='unique_n_cesr'),
        ),
        migrations.AddConstraint(
            model_name='image',
            constraint=models.UniqueConstraint(fields=('lien_telechargement',), name='unique_lien_telechargement'),
        ),
    ]
